---
- name: Validate workload domain
  sddc_manager_workload_domain:
    sddc_manager_ip: "{{ sddc_manager_ip }}"
    sddc_manager_user: "{{ sddc_manager_username }}"
    sddc_manager_password: "{{ sddc_manager_password }}"
    license_key: "{{ license_key }}"
    nsx_license_key: "{{ nsx_license_key }}"
    vsan_license_key: "{{ vsan_license_key }}"
    hostsSpec: "{{ hostsSpec }}"
    state: "validate"
    workload_domain_payload: "{{ workload_domain_payload }}"
  register: result
  failed_when: result.meta.resultStatus != "SUCCEEDED"

- debug:
    msg: "Workload Domain Validation Status: {{ result }}"

 
- name: Create workload domain
  sddc_manager_workload_domain:
    sddc_manager_ip: "{{ sddc_manager_ip }}"
    sddc_manager_user: "{{ sddc_manager_username }}"
    sddc_manager_password: "{{ sddc_manager_password }}"
    license_key: "{{ license_key }}"
    nsx_license_key: "{{ nsx_license_key }}"
    vsan_license_key: "{{ vsan_license_key }}"
    hostsSpec: "{{ hostsSpec }}"
    state: "create"
    workload_domain_payload: "{{ workload_domain_payload }}"
  register: result

- debug:
    msg: "Workload Domain Creation Status: {{ result }}"

- set_fact:
    workload_domain_id: "{{ result.meta.id }}"

- debug:
    msg: "Workload Domain Creation ID: {{ workload_domain_id }}"

#switch to upper
- name: Wait for Workload Domain
  sddc_manager_tasks_status:
    sddc_manager_ip: "{{ sddc_manager_ip }}"
    sddc_manager_user: "{{ sddc_manager_username }}"
    sddc_manager_password: "{{ sddc_manager_password }}"
    tasks_id: c8667384-7db4-4752-8d09-993e046fc5e0
    sddc_manager_tasks_type: wld_domain
    validation: False
  register: result
  until: result.meta.status == 'Successful' or result.meta.status == 'Failed'
  retries: 60
  delay: 10
  failed_when: result.meta.status == "Failed"

- debug:
    msg: "Workload Domain Created"